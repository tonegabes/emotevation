name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies with fallback
      id: install-deps
      run: |
        echo "Installing dependencies with standard approach..."
        # Remove node_modules if it exists to ensure clean install
        [ -d "node_modules" ] && rm -rf node_modules
        # Clean npm cache to avoid dependency issues
        npm cache clean --force
        # Check for package-lock.json version
        if grep -q "\"lockfileVersion\": 3" package-lock.json; then
          echo "Using npm version 7+ lock file format"
        else
          echo "Warning: package-lock.json might be outdated. Consider regenerating it with npm@7+."
        fi
        # Try standard install first
        npm ci && echo "install_method=npm_ci" >> $GITHUB_OUTPUT || echo "Standard npm ci failed, will try fallback method"
      continue-on-error: true

    - name: Fallback to npm install if ci failed
      if: steps.install-deps.outcome == 'failure' || steps.install-deps.outputs.install_method != 'npm_ci'
      run: |
        echo "Fallback to npm install..."
        # Make dependency check script executable
        chmod +x scripts/check-dependencies.js
        
        # Run dependency check script
        node scripts/check-dependencies.js
        
        # Install with standard npm install
        npm install || npm install --legacy-peer-deps

    - name: Build
      run: |
        NODE_ENV=production npm run build
        
    - name: Prepare for GitHub Pages
      run: |
        # Ensure .nojekyll file exists
        touch out/.nojekyll
        
        # Copy GitHub Pages routing files
        cp public/github-index.html out/index.html
        cp public/404.html out/404.html
        cp public/gh-pages-router.js out/gh-pages-router.js
        
        # Ensure emotevation index.html doesn't redirect to itself
        if [ -d "out/emotevation" ]; then
          cat > out/emotevation/index.html << EOL
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Emotevation - Personalized Daily Motivation</title>
  <meta name="description" content="Get personalized motivational quotes or reality checks based on your name and date. Every combination creates a unique result to inspire your day.">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta property="og:title" content="Emotevation - Personalized Daily Motivation">
  <meta property="og:description" content="Get personalized motivational quotes or reality checks based on your name and date.">
  <meta property="og:image" content="https://tonegabes.github.io/emotevation/opengraph-image.png">
  <meta property="og:url" content="https://tonegabes.github.io/emotevation/">
  <meta property="og:type" content="website">
  <meta name="twitter:card" content="summary_large_image">
  <script src="/emotevation/gh-pages-router.js"></script>
</head>
<body>
  <div id="__next"></div>
</body>
</html>
EOL
        fi

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './out'

  deploy:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4