/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Ftonegabes%2FProjetos%2FCodes%2Femotevation%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Ftonegabes%2FProjetos%2FCodes%2Femotevation%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRnRvbmVnYWJlcyUyRlByb2pldG9zJTJGQ29kZXMlMkZlbW90ZXZhdGlvbiUyRmFwcCUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsc0pBQTRGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/NDA2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL3RvbmVnYWJlcy9Qcm9qZXRvcy9Db2Rlcy9lbW90ZXZhdGlvbi9hcHAvcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Ftonegabes%2FProjetos%2FCodes%2Femotevation%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/QuoteCard.tsx":
/*!**************************************!*\
  !*** ./app/components/QuoteCard.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst QuoteCard = (param)=>{\n    let { name, date, quote, isUnmotivational = false } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full max-w-xl p-8 mx-auto backdrop-blur-lg rounded-xl shadow-xl border transform transition-all hover:scale-[1.01] relative mt-10 \".concat(isUnmotivational ? \"bg-gray-800/10 border-gray-600/20\" : \"bg-white/10 border-white/20\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute -top-10 left-1/2 transform -translate-x-1/2 w-20 h-20 rounded-full flex items-center justify-center shadow-lg border-4 \".concat(isUnmotivational ? \"bg-gradient-to-br from-gray-600 to-gray-800 border-gray-500/20\" : \"bg-gradient-to-br from-purple-600 to-pink-600 border-white/20\"),\n                children: isUnmotivational ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    width: \"28\",\n                    height: \"28\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 24,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M8 15H16\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 25,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M9 9H9.01\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 26,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M15 9H15.01\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 27,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                    lineNumber: 23,\n                    columnNumber: 11\n                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    width: \"28\",\n                    height: \"28\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 31,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M16 12.9C16 11.9 15.19 11.07 14.2 11C14.08 10.99 13.96 10.99 13.84 11C12.94 11.07 12.18 11.9 12.18 12.81C12.18 13.67 12.81 14.4 13.66 14.57V15.55C13.66 16.01 14.04 16.4 14.5 16.4C14.96 16.4 15.34 16.02 15.34 15.56V14.58C16.2 14.4 16.82 13.67 16.82 12.81C16.82 12.8 16.81 12.8 16.81 12.8\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 32,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M14.5 8.8V9.35\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 33,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M14.5 17.45V18\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 34,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M8.5 16.4C7.1 16.4 6 15.3 6 13.9V12.4C6 11 7.1 9.90002 8.5 9.90002C9.9 9.90002 11 11 11 12.4V13.9C11 15.3 9.9 16.4 8.5 16.4Z\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 35,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M8.5 16.4V18.2\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 36,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M8.5 9.90001V8.10001\",\n                            stroke: \"white\",\n                            strokeWidth: \"1.5\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 37,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                    lineNumber: 30,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                lineNumber: 17,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-2xl font-bold text-center mb-2 mt-10 bg-clip-text text-transparent \".concat(isUnmotivational ? \"bg-gradient-to-r from-gray-400 to-gray-600\" : \"bg-gradient-to-r from-pink-500 to-violet-500\"),\n                        children: isUnmotivational ? \"Your Reality Check for Today\" : \"Your Quote for Today\"\n                    }, void 0, false, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-20 h-1 rounded-full mb-4 \".concat(isUnmotivational ? \"bg-gradient-to-r from-gray-500 to-gray-700\" : \"bg-gradient-to-r from-purple-500 to-pink-500\")\n                    }, void 0, false, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                        lineNumber: 51,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-sm font-semibold mb-1\",\n                                children: [\n                                    \"For \",\n                                    name\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                                lineNumber: 58,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-xs opacity-75 mb-6\",\n                                children: date\n                            }, void 0, false, {\n                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                                lineNumber: 59,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                        lineNumber: 57,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"blockquote\", {\n                        className: \"text-xl italic text-center mb-6 font-light leading-relaxed\",\n                        children: [\n                            \"“\",\n                            quote,\n                            \"”\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                        lineNumber: 62,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full pt-4 border-t border-white/10\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-xs text-center text-white/60\",\n                            children: isUnmotivational ? \"This reality check is uniquely generated for you based on your name and this date\" : \"This quote is uniquely generated for you based on your name and this date\"\n                        }, void 0, false, {\n                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                            lineNumber: 67,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                        lineNumber: 66,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/components/QuoteCard.tsx\",\n        lineNumber: 12,\n        columnNumber: 5\n    }, undefined);\n};\n_c = QuoteCard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (QuoteCard);\nvar _c;\n$RefreshReg$(_c, \"QuoteCard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/QuoteCard.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/data/quotes.ts":
/*!****************************!*\
  !*** ./app/data/quotes.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   quotes: function() { return /* binding */ quotes; }\n/* harmony export */ });\n// Collection of motivational quotes\nconst quotes = [\n    \"Believe you can and you're halfway there.\",\n    \"You are never too old to set another goal or to dream a new dream.\",\n    \"It does not matter how slowly you go as long as you do not stop.\",\n    \"The only way to do great work is to love what you do.\",\n    \"Don't watch the clock; do what it does. Keep going.\",\n    \"Success is not final, failure is not fatal: It is the courage to continue that counts.\",\n    \"Believe in yourself and all that you are. Know that there is something inside you that is greater than any obstacle.\",\n    \"Your time is limited, don't waste it living someone else's life.\",\n    \"The future belongs to those who believe in the beauty of their dreams.\",\n    \"Don't be pushed around by the fears in your mind. Be led by the dreams in your heart.\",\n    \"The only limit to our realization of tomorrow will be our doubts of today.\",\n    \"The way to get started is to quit talking and begin doing.\",\n    \"You are braver than you believe, stronger than you seem, and smarter than you think.\",\n    \"Everything you've ever wanted is on the other side of fear.\",\n    \"Hardships often prepare ordinary people for an extraordinary destiny.\",\n    \"Start where you are. Use what you have. Do what you can.\",\n    \"The only person you are destined to become is the person you decide to be.\",\n    \"What you get by achieving your goals is not as important as what you become by achieving your goals.\",\n    \"Challenges are what make life interesting and overcoming them is what makes life meaningful.\",\n    \"Your attitude, not your aptitude, will determine your altitude.\",\n    \"If you want to lift yourself up, lift up someone else.\",\n    \"I have not failed. I've just found 10,000 ways that won't work.\",\n    \"Success is stumbling from failure to failure with no loss of enthusiasm.\",\n    \"You miss 100% of the shots you don't take.\",\n    \"The greatest glory in living lies not in never falling, but in rising every time we fall.\",\n    \"What we fear doing most is usually what we most need to do.\",\n    \"I am not a product of my circumstances. I am a product of my decisions.\",\n    \"The question isn't who is going to let me; it's who is going to stop me.\",\n    \"When everything seems to be going against you, remember that the airplane takes off against the wind, not with it.\",\n    \"It is during our darkest moments that we must focus to see the light.\",\n    \"Whether you think you can or you think you can't, you're right.\",\n    \"Life is 10% what happens to me and 90% of how I react to it.\",\n    \"When one door of happiness closes, another opens.\",\n    \"Nothing is impossible, the word itself says, 'I'm possible!'\",\n    \"The only way to achieve the impossible is to believe it is possible.\",\n    \"Too many of us are not living our dreams because we are living our fears.\",\n    \"The best time to plant a tree was 20 years ago. The second best time is now.\",\n    \"The purpose of our lives is to be happy.\",\n    \"Don't cry because it's over, smile because it happened.\",\n    \"Success is not how high you have climbed, but how you make a positive difference to the world.\",\n    \"Happiness is not something ready-made. It comes from your own actions.\",\n    \"Don't let yesterday take up too much of today.\",\n    \"You don't have to be great to start, but you have to start to be great.\",\n    \"Act as if what you do makes a difference. It does.\",\n    \"We become what we think about.\",\n    \"The mind is everything. What you think you become.\",\n    \"Life is not about finding yourself. Life is about creating yourself.\",\n    \"If you can dream it, you can do it.\",\n    \"Either you run the day, or the day runs you.\",\n    \"Today's accomplishments were yesterday's impossibilities.\",\n    \"The only way to do great work is to love what you do.\",\n    \"Success is not final, failure is not fatal: it is the courage to continue that counts.\",\n    \"The future belongs to those who believe in the beauty of their dreams.\",\n    \"It is during our darkest moments that we must focus to see the light.\",\n    \"The only impossible journey is the one you never begin.\",\n    \"In the middle of difficulty lies opportunity.\",\n    \"Believe you can and you're halfway there.\",\n    \"The way to get started is to quit talking and begin doing.\",\n    \"Your limitation—it's only your imagination.\",\n    \"Push yourself, because no one else is going to do it for you.\",\n    \"Great things never come from comfort zones.\",\n    \"Dream it. Wish it. Do it.\",\n    \"Success doesn't just find you. You have to go out and get it.\",\n    \"The harder you work for something, the greater you'll feel when you achieve it.\",\n    \"Dream bigger. Do bigger.\",\n    \"Don't stop when you're tired. Stop when you're done.\",\n    \"Wake up with determination. Go to bed with satisfaction.\",\n    \"Do something today that your future self will thank you for.\",\n    \"Little things make big days.\",\n    \"It's going to be hard, but hard does not mean impossible.\",\n    \"Don't wait for opportunity. Create it.\",\n    \"Sometimes we're tested not to show our weaknesses, but to discover our strengths.\",\n    \"The key to success is to focus on goals, not obstacles.\",\n    \"Dream it. Believe it. Build it.\",\n    \"What lies behind us and what lies before us are tiny matters compared to what lies within us.\",\n    \"The only person you are destined to become is the person you decide to be.\",\n    \"Go confidently in the direction of your dreams. Live the life you have imagined.\",\n    \"Turn your wounds into wisdom.\",\n    \"The best time to plant a tree was 20 years ago. The second best time is now.\",\n    \"You are never too old to set another goal or to dream a new dream.\",\n    \"The difference between ordinary and extraordinary is that little extra.\",\n    \"Success is not how high you have climbed, but how you make a positive difference to the world.\",\n    \"Be yourself; everyone else is already taken.\",\n    \"Two things define you: your patience when you have nothing and your attitude when you have everything.\",\n    \"Opportunities don't happen. You create them.\",\n    \"Try not to become a person of success, but rather try to become a person of value.\",\n    \"A successful man is one who can lay a firm foundation with the bricks others have thrown at him.\",\n    \"No one can make you feel inferior without your consent.\",\n    \"The most difficult thing is the decision to act, the rest is merely tenacity.\",\n    \"You miss 100% of the shots you don't take.\",\n    \"Every strike brings me closer to the next home run.\",\n    \"Definiteness of purpose is the starting point of all achievement.\",\n    \"We may encounter many defeats but we must not be defeated.\",\n    \"Life is what happens to you while you're busy making other plans.\",\n    \"The future belongs to those who prepare for it today.\",\n    \"Don't be pushed around by the fears in your mind. Be led by the dreams in your heart.\",\n    \"Challenges are what make life interesting and overcoming them is what makes life meaningful.\",\n    \"If you want to lift yourself up, lift up someone else.\",\n    \"I have not failed. I've just found 10,000 ways that won't work.\",\n    \"A person who never made a mistake never tried anything new.\",\n    \"The person who says it cannot be done should not interrupt the person who is doing it.\",\n    \"There are no traffic jams along the extra mile.\",\n    \"It is never too late to be what you might have been.\",\n    \"You become what you believe.\",\n    \"I would rather die of passion than of boredom.\",\n    \"A truly rich man is one whose children run into his arms when his hands are empty.\",\n    \"It is not what you do for your children, but what you have taught them to do for themselves.\",\n    \"Build your own dreams, or someone else will hire you to build theirs.\",\n    \"The battles that count aren't the ones for gold medals. The struggles within yourself matter most.\",\n    \"Education costs money. But then so does ignorance.\",\n    \"I am not a product of my circumstances. I am a product of my decisions.\",\n    \"Watching television is like taking black spray paint to your third eye.\",\n    \"Every child is an artist. The problem is how to remain an artist once he grows up.\",\n    \"You can never cross the ocean until you have the courage to lose sight of the shore.\",\n    \"I've learned that people will forget what you said, people will forget what you did, but people will never forget how you made them feel.\",\n    \"Either you run the day, or the day runs you.\",\n    \"Whether you think you can or you think you can't, you're right.\",\n    \"The two most important days in your life are the day you are born and the day you find out why.\",\n    \"Whatever you can do, or dream you can, begin it. Boldness has genius, power and magic in it.\",\n    \"The best revenge is massive success.\",\n    \"A person who won't read has no advantage over one who can't read.\",\n    \"You can never plan the future by the past.\",\n    \"Try to be a rainbow in someone's cloud.\",\n    \"You do not find the happy life. You make it.\",\n    \"Inspiration does exist, but it must find you working.\",\n    \"Don't judge each day by the harvest you reap but by the seeds that you plant.\",\n    \"The question isn't who is going to let me; it's who is going to stop me.\",\n    \"You can't use up creativity. The more you use, the more you have.\",\n    \"Dream big and dare to fail.\",\n    \"You may be disappointed if you fail, but you are doomed if you don't try.\",\n    \"Life is 10% what happens to me and 90% of how I react to it.\",\n    \"The most common way people give up their power is by thinking they don't have any.\",\n    \"If there is no struggle, there is no progress.\",\n    \"A mind that is stretched by a new experience can never go back to its old dimensions.\",\n    \"You measure the size of the accomplishment by the obstacles you had to overcome to reach your goals.\",\n    \"Real difficulties can be overcome; it is only the imaginary ones that are unconquerable.\",\n    \"Security is mostly a superstition. Life is either a daring adventure or nothing.\",\n    \"The only person you are destined to become is the person you decide to be.\",\n    \"What's money? A man is a success if he gets up in the morning and goes to bed at night and in between does what he wants to do.\",\n    \"I didn't fail the test. I just found 100 ways to do it wrong.\",\n    \"In order to succeed, your desire for success should be greater than your fear of failure.\",\n    \"A successful man is one who can lay a firm foundation with the bricks others have thrown at him.\",\n    \"Champions keep playing until they get it right.\",\n    \"Courage is not the absence of fear, but action in spite of it.\",\n    \"The elevator to success is out of order. You'll have to use the stairs... one step at a time.\",\n    \"Persistence can change failure into extraordinary achievement.\",\n    \"Making a big life change is pretty scary. But know what's even scarier? Regret.\",\n    \"If you genuinely want something, don't wait for it – teach yourself to be impatient.\",\n    \"Don't let what you cannot do interfere with what you can do.\",\n    \"You have been assigned this mountain to show others it can be moved.\",\n    \"The cave you fear to enter holds the treasure you seek.\",\n    \"Everything you've ever wanted is on the other side of fear.\",\n    \"Failure is the condiment that gives success its flavor.\",\n    \"Don't let yesterday take up too much of today.\",\n    \"You learn more from failure than from success. Don't let it stop you. Failure builds character.\",\n    \"If you are working on something exciting that you really care about, you don't have to be pushed. The vision pulls you.\",\n    \"Experience is a hard teacher because she gives the test first, the lesson afterward.\",\n    \"To know how much there is to know is the beginning of learning to live.\",\n    \"I find that the harder I work, the more luck I seem to have.\",\n    \"The expert in anything was once a beginner.\",\n    \"You are what you do, not what you say you'll do.\",\n    \"Knowledge is being aware of what you can do. Wisdom is knowing when not to do it.\",\n    \"You can do anything, but not everything.\",\n    \"Innovation distinguishes between a leader and a follower.\",\n    \"There are two types of people who will tell you that you cannot make a difference in this world: those who are afraid to try and those who are afraid you will succeed.\",\n    \"Thinking should become your capital asset, no matter whatever ups and downs you come across in your life.\",\n    \"I find that when you have a real interest in life and a curious life, that sleep is not the most important thing.\",\n    \"It's better to be absolutely ridiculous than absolutely boring.\",\n    \"To live a creative life, we must lose our fear of being wrong.\",\n    \"If you want to make a permanent change, stop focusing on the size of your problems and start focusing on the size of you!\",\n    \"Creativity is intelligence having fun.\",\n    \"What seems impossible today will one day become your warm-up.\",\n    \"A year from now you may wish you had started today.\",\n    \"Some people dream of success, while other people get up every morning and make it happen.\",\n    \"Don't compare your beginning to someone else's middle.\",\n    \"Stay hungry. Stay foolish.\",\n    \"Good things happen to those who work hard.\",\n    \"Don't stop until you're proud.\",\n    \"Make each day your masterpiece.\",\n    \"Wherever you go, go with all your heart.\",\n    \"Turn your obstacles into opportunities and your problems into possibilities.\",\n    \"Keep your face always toward the sunshine—and shadows will fall behind you.\",\n    \"What we achieve inwardly will change outer reality.\",\n    \"An unexamined life is not worth living.\",\n    \"Eighty percent of success is showing up.\",\n    \"Your only limit is your mind.\",\n    \"Sometimes life is about risking everything for a dream no one can see but you.\",\n    \"The cost of not following your heart, is spending the rest of your life wishing you had.\",\n    \"Don't downgrade your dreams just to fit your reality. Upgrade your conviction to match your destiny.\",\n    \"You are braver than you believe, stronger than you seem, and smarter than you think.\",\n    \"If it doesn't challenge you, it won't change you.\",\n    \"Make it happen.\",\n    \"Do what you have to do until you can do what you want to do.\",\n    \"Success is what comes after your stop making excuses.\",\n    \"Don't wait for the perfect moment. Take the moment and make it perfect.\",\n    \"Life is tough, but so are you.\",\n    \"A little progress each day adds up to big results.\",\n    \"Don't quit your daydream.\",\n    \"Difficult roads often lead to beautiful destinations.\",\n    \"When you feel like quitting, think about why you started.\",\n    \"The comeback is always stronger than the setback.\",\n    \"Progress, not perfection.\",\n    \"Fall seven times, stand up eight.\",\n    \"You don't have to be great to get started, but you have to get started to be great.\",\n    \"Every moment is a fresh beginning.\",\n    \"Never give up on a dream just because of the time it will take to accomplish it. The time will pass anyway.\",\n    \"If you want it, work for it.\",\n    \"Success is the sum of small efforts repeated day in and day out.\",\n    \"Don't wish it were easier; wish you were better.\",\n    \"Champions are made when nobody's watching.\",\n    \"The expert in anything was once a beginner.\",\n    \"Be so good they can't ignore you.\",\n    \"Your potential is endless.\",\n    \"Stars can't shine without darkness.\",\n    \"Every day is a new beginning.\",\n    \"Believe in yourself and all that you are.\",\n    \"The only way to predict the future is to create it.\",\n    \"You are capable of amazing things.\",\n    \"Start where you are. Use what you have. Do what you can.\",\n    \"The journey of a thousand miles begins with one step.\",\n    \"Be the change you wish to see in the world.\",\n    \"Life is 10% what happens to you and 90% how you react to it.\",\n    \"The only thing standing between you and your goal is the story you keep telling yourself as to why you can't achieve it.\",\n    \"If you can dream it, you can do it.\",\n    \"The secret of getting ahead is getting started.\",\n    \"You miss 100% of the shots you don't take.\",\n    \"It always seems impossible until it's done.\",\n    \"The only limit to our realization of tomorrow will be our doubts of today.\",\n    \"Life shrinks or expands in proportion to one's courage.\",\n    \"Nothing is impossible, the word itself says 'I'm possible'!\",\n    \"Keep going. Everything you need will come to you at the perfect time.\",\n    \"A goal is a dream with a deadline.\",\n    \"The difference between who you are and who you want to be is what you do.\",\n    \"You are never too old to set another goal or to dream a new dream.\",\n    \"Success is not the key to happiness. Happiness is the key to success.\",\n    \"The only way to achieve the impossible is to believe it is possible.\",\n    \"Don't let small minds convince you that your dreams are too big.\",\n    \"Every great dream begins with a dreamer.\",\n    \"You have within you right now, everything you need to deal with whatever the world can throw at you.\",\n    \"Hardships often prepare ordinary people for an extraordinary destiny.\",\n    \"The future depends on what you do today.\",\n    \"Excellence is never an accident. It is always the result of high intention, sincere effort, and intelligent execution.\",\n    \"You can't go back and change the beginning, but you can start where you are and change the ending.\",\n    \"The only person you should try to be better than is the person you were yesterday.\",\n    \"Success isn't just about what you accomplish in your life, it's about what you inspire others to do.\",\n    \"Don't be afraid to give yourself everything you've ever wanted in life.\",\n    \"The best way to predict your future is to create it.\",\n    \"You are the author of your own story.\",\n    \"Every day you have two choices: continue to stay asleep with your dreams or wake up and chase them.\",\n    \"The pain you feel today is the strength you feel tomorrow.\",\n    \"Don't stop when you're tired. Stop when you're done.\",\n    \"Great things never come from comfort zones.\",\n    \"If you want something you've never had, you must be willing to do something you've never done.\",\n    \"The only impossible journey is the one you never begin.\",\n    \"Your current situation is not your final destination.\",\n    \"Every accomplishment starts with the decision to try.\",\n    \"You don't need to see the whole staircase, just take the first step.\",\n    \"The biggest risk is not taking any risk.\",\n    \"What lies behind us and what lies before us are tiny matters compared to what lies within us.\",\n    \"You are stronger than you think.\",\n    \"Don't let anyone ever dull your shine.\",\n    \"Today is the first day of the rest of your life.\",\n    \"You have the power to create the life you want.\",\n    \"Believe in the power of your dreams.\",\n    \"Your dreams are waiting for you.\",\n    \"Every setback is a setup for a comeback.\",\n    \"You are exactly where you need to be.\",\n    \"Trust the process.\",\n    \"Your time is now.\",\n    \"Make today so awesome that yesterday gets jealous.\",\n    \"You are your only limit.\",\n    \"Embrace the journey.\",\n    \"Create the life you can't wait to wake up to.\",\n    \"You are more resilient than you realize.\",\n    \"Every day is a chance to change your life.\",\n    \"You have survived 100% of your worst days.\",\n    \"Your story isn't over yet.\",\n    \"You are capable of incredible things.\",\n    \"The best is yet to come.\",\n    \"You are enough, just as you are.\",\n    \"Your dreams don't have an expiration date.\",\n    \"You are the CEO of your own life.\",\n    \"Every day is a new opportunity to grow.\",\n    \"You are writing your legacy every day.\",\n    \"Your potential is limitless.\",\n    \"You are destined for greatness.\",\n    \"Believe in the magic of new beginnings.\",\n    \"You are the artist of your own life.\",\n    \"Your courage is stronger than your fear.\",\n    \"You are capable of more than you know.\",\n    \"Every day is a gift.\",\n    \"You are exactly who you're meant to be.\",\n    \"Your journey is unique and beautiful.\",\n    \"You have everything within you to succeed.\",\n    \"You are the hero of your own story.\",\n    \"Your dreams are valid.\",\n    \"You are unstoppable.\",\n    \"Every challenge is an opportunity to grow.\",\n    \"You are exactly where you're supposed to be.\",\n    \"Your success is inevitable.\",\n    \"You are more powerful than you realize.\",\n    \"Every day is a chance to start over.\",\n    \"You are the master of your fate.\",\n    \"Your possibilities are endless.\",\n    \"You are braver than you believe.\",\n    \"Every moment is a new beginning.\",\n    \"You are the captain of your soul.\",\n    \"Your future is bright.\",\n    \"You are worthy of all your dreams.\",\n    \"Every step forward is progress.\",\n    \"You are creating your own sunshine.\",\n    \"Your strength is greater than any struggle.\",\n    \"You are exactly what the world needs.\",\n    \"Every day you're getting stronger.\",\n    \"You are the author of your destiny.\",\n    \"Your light shines brightest in the darkness.\",\n    \"You are capable of extraordinary things.\",\n    \"Every breath is a new chance.\",\n    \"You are the miracle you've been waiting for.\",\n    \"Your heart knows the way.\",\n    \"You are exactly where miracles happen.\",\n    \"Every day is a new chapter.\",\n    \"You are the change you wish to see.\",\n    \"Your dreams are calling you.\",\n    \"You are more than enough.\",\n    \"Every moment holds infinite possibility.\",\n    \"You are the key to your own success.\",\n    \"Your journey is just beginning.\",\n    \"You are destined for amazing things.\",\n    \"Every day is a chance to shine.\",\n    \"You are the light in someone's darkness.\",\n    \"Your time to bloom is now.\",\n    \"You are exactly what this world needs more of.\"\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/data/quotes.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/data/unmotivationalQuotes.ts":
/*!******************************************!*\
  !*** ./app/data/unmotivationalQuotes.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unmotivationalQuotes: function() { return /* binding */ unmotivationalQuotes; }\n/* harmony export */ });\n// Collection of unmotivational quotes (humorous and ironic)\nconst unmotivationalQuotes = [\n    \"Don't follow your dreams. Follow my Twitter account.\",\n    \"Always remember that you are unique. Just like everybody else.\",\n    \"If at first you don't succeed, maybe skydiving isn't for you.\",\n    \"It could be that your purpose in life is to serve as a warning to others.\",\n    \"If you think nobody cares if you're alive, try missing a couple of payments.\",\n    \"Never put off until tomorrow what you can avoid altogether.\",\n    \"The road to success is dotted with many tempting parking spaces.\",\n    \"Hard work never killed anybody, but why take a chance?\",\n    \"I find it helps to organize my tasks into three categories: things I won't do now, things I won't do later, and things I'll never do.\",\n    \"If you don't succeed at first, hide all evidence you tried.\",\n    \"The light at the end of the tunnel has been turned off due to budget cuts.\",\n    \"Sometimes I aim to be a better person, but then I get distracted and end up on the couch with snacks.\",\n    \"The early bird gets the worm, but the second mouse gets the cheese.\",\n    \"I'm not lazy, I'm just on energy-saving mode.\",\n    \"I don't need a hairstylist, my pillow gives me a new look every morning.\",\n    \"I'm not saying I'm Batman. I'm just saying nobody has ever seen me and Batman in the same room together.\",\n    \"I'm not arguing, I'm just explaining why I'm right.\",\n    \"I'd flex, but I like my dad bod the way it is.\",\n    \"Don't worry about what people think. They don't do it very often.\",\n    \"I would like to apologize to anyone whom I haven't offended yet. Please be patient, I'll get to you shortly.\",\n    \"People say nothing is impossible, but I do nothing every day.\",\n    \"My bed is a magical place where I suddenly remember everything I forgot to do.\",\n    \"Life is short. Smile while you still have teeth.\",\n    \"Doing nothing is hard, you never know when you're done.\",\n    \"I'm not a complete idiot, some parts are missing.\",\n    \"It's okay if you don't like me. Not everyone has good taste.\",\n    \"The older I get, the earlier it gets late.\",\n    \"My goal this weekend is to move... from the bed to the couch.\",\n    \"I'm not saying I'm Wonder Woman, I'm just saying no one has ever seen me and Wonder Woman in the same room together.\",\n    \"I don't always go the extra mile, but when I do it's because I missed my exit.\",\n    \"I'm so good at sleeping, I can do it with my eyes closed.\",\n    \"If we're not meant to have midnight snacks, why is there a light in the fridge?\",\n    \"I hate when people ask me what I'm going to be doing in 6 days. I don't even know what I'm having for lunch tomorrow.\",\n    \"The biggest lie I tell myself is 'I don't need to write that down, I'll remember it.'\",\n    \"There is no 'i' in team, but there is in 'wine', 'pizza', and 'I don't want to go'.\",\n    \"I'm not lazy, I'm on energy-saving mode.\",\n    \"Sometimes I pretend to be normal. But it gets boring. So I go back to being me.\",\n    \"Common sense is like deodorant. The people who need it most never use it.\",\n    \"The first 5 days after the weekend are always the hardest.\",\n    \"The best thing about the future is that it comes one day at a time.\",\n    \"The only thing standing between you and your goal is the story you keep telling yourself as to why you can't achieve it... and also your complete lack of talent.\",\n    \"Dreams don't work unless you do... but even then, they probably won't.\",\n    \"Success is 1% inspiration, 99% perspiration, and 100% disappointment.\",\n    \"If at first you don't succeed, maybe skydiving isn't for you.\",\n    \"The early bird might get the worm, but the second mouse gets the cheese... and also dies anyway.\",\n    \"Hard work pays off in the future, laziness pays off now.\",\n    \"Every expert was once a beginner... some just stayed that way longer.\",\n    \"Rome wasn't built in a day, but it did burn down pretty quickly.\",\n    \"When life gives you lemons, check for hidden cameras because someone's probably pranking you.\",\n    \"You miss 100% of the shots you don't take, but you also miss most of the shots you do take.\",\n    \"Believe in yourself, because everyone else thinks you're delusional anyway.\",\n    \"The journey of a thousand miles begins with a single step... directly into a pothole.\",\n    \"Teamwork means never having to take all the blame yourself.\",\n    \"Procrastination: Hard work often pays off after time, but laziness always pays off now.\",\n    \"If you think you can achieve anything you put your mind to, you clearly haven't been paying attention.\",\n    \"Winners never quit, quitters never win, but those who never win and never quit are idiots.\",\n    \"The glass isn't half empty or half full, it's twice as big as it needs to be.\",\n    \"Opportunity may knock once, but temptation bangs on your door forever.\",\n    \"Behind every successful man is a surprised woman.\",\n    \"It's always darkest before dawn... so if you're going to steal your neighbor's newspaper, that's the time to do it.\",\n    \"The only impossible journey is the one you never begin... thankfully.\",\n    \"You can't have everything. Where would you put it?\",\n    \"If you're not part of the solution, you're part of the precipitate.\",\n    \"Aim for the moon. Even if you miss, you'll land among the stars... and die in the vacuum of space.\",\n    \"The best time to plant a tree was 20 years ago. The second best time is now. The worst time is during a hurricane.\",\n    \"Don't put all your eggs in one basket... they'll probably break anyway.\",\n    \"Life is like a box of chocolates: expensive, gone too quickly, and leaves you feeling sick.\",\n    \"You can lead a horse to water, but you can't make it think.\",\n    \"When one door closes, another opens... but most of the time it's just the wind.\",\n    \"The pen is mightier than the sword, but the keyboard is mightier than the pen, and autocorrect is mightier than them all.\",\n    \"If you want something done right, do it yourself... and then do it again because you messed it up the first time.\",\n    \"Practice makes perfect, but nobody's perfect, so why practice?\",\n    \"Money can't buy happiness, but it can buy a better class of misery.\",\n    \"The squeaky wheel gets the grease... and then gets replaced.\",\n    \"A picture is worth a thousand words, but it takes up a lot more memory.\",\n    \"Time heals all wounds... except those inflicted by compound interest.\",\n    \"Laughter is the best medicine... unless you have real problems.\",\n    \"Better late than never, but never late is better.\",\n    \"Actions speak louder than words, but words are easier to spell.\",\n    \"If you can't beat them, join them... then beat them from the inside.\",\n    \"The customer is always right... to complain.\",\n    \"Honesty is the best policy, but insanity is a better defense.\",\n    \"Knowledge is power, but power corrupts, so study hard and become evil.\",\n    \"The road to success is always under construction.\",\n    \"If life gives you melons, you might be dyslexic.\",\n    \"You can't judge a book by its cover, but you can judge it by its terrible reviews.\",\n    \"Absence makes the heart grow fonder... of being alone.\",\n    \"The grass is always greener on the other side... because it's fertilized with bullshit.\",\n    \"Two wrongs don't make a right, but three rights make a left.\",\n    \"You can't make an omelet without breaking a few eggs... and burning the pan.\",\n    \"Persistence is the key to success... or harassment, depending on your perspective.\",\n    \"The only constant in life is change... and taxes.\",\n    \"If you build it, they will come... and then complain about the parking.\",\n    \"Great minds think alike, but fools seldom differ.\",\n    \"The devil is in the details... and apparently he's an accountant.\",\n    \"You can't teach an old dog new tricks, but you can teach a new dog old tricks and call it 'classic training.'\",\n    \"Lightning never strikes twice in the same place... it doesn't need to.\",\n    \"A bird in the hand is worth two in the bush... but it's also kind of gross.\",\n    \"Don't count your chickens before they hatch... they might be hard-boiled.\",\n    \"The apple doesn't fall far from the tree... unless there's a really strong wind.\",\n    \"Necessity is the mother of invention... and laziness is the father.\",\n    \"If you want to make God laugh, tell him your plans... he could use a good chuckle.\",\n    \"The best-laid plans of mice and men often go awry... especially the ones made by mice.\",\n    \"Fortune favors the bold... but insurance favors the cautious.\",\n    \"You reap what you sow... unless you're a terrible farmer.\",\n    \"A stitch in time saves nine... but who has time for stitching?\",\n    \"Don't bite the hand that feeds you... it's probably not sanitary.\",\n    \"The proof is in the pudding... but the pudding might be expired.\",\n    \"You can't have your cake and eat it too... but you can have diabetes.\",\n    \"A rolling stone gathers no moss... but it does gather speed and eventual lawsuits.\",\n    \"Beggars can't be choosers... but they can be critics.\",\n    \"Don't put the cart before the horse... the horse already has trust issues.\",\n    \"The writing is on the wall... in crayon, apparently.\",\n    \"Don't throw stones if you live in a glass house... invest in better security instead.\",\n    \"A fool and his money are soon parted... usually by someone smarter.\",\n    \"All that glitters is not gold... some of it is just glitter.\",\n    \"You can't make a silk purse out of a sow's ear... but you can make some questionable fashion choices.\",\n    \"The truth will set you free... but first it will make you miserable.\",\n    \"Curiosity killed the cat... satisfaction brought it back, but it was never quite the same.\",\n    \"Don't cry over spilled milk... unless it was really expensive milk.\",\n    \"Every cloud has a silver lining... but some clouds are just full of acid rain.\",\n    \"Good things come to those who wait... but better things come to those who take action... but the best things probably aren't available anyway.\",\n    \"Haste makes waste... but procrastination makes more waste.\",\n    \"If the shoe fits, wear it... unless it's ugly.\",\n    \"Love conquers all... except student loan debt.\",\n    \"The more things change, the more they stay the same... and expensive.\",\n    \"No pain, no gain... but sometimes just pain.\",\n    \"Patience is a virtue... that nobody has time for.\",\n    \"The road to hell is paved with good intentions... and construction delays.\",\n    \"Silence is golden... but duct tape is silver.\",\n    \"There's no place like home... which is why hotels exist.\",\n    \"Time flies when you're having fun... and crawls when you're at work.\",\n    \"What doesn't kill you makes you stronger... or gives you trust issues.\",\n    \"When in Rome, do as the Romans do... unless you're lactose intolerant.\",\n    \"You get what you pay for... unless you're buying generic.\",\n    \"A penny saved is a penny earned... but inflation makes both worthless.\",\n    \"Don't look a gift horse in the mouth... it might have dental problems.\",\n    \"The enemy of my enemy is my friend... until they're not.\",\n    \"If it ain't broke, don't fix it... but it will break eventually.\",\n    \"Jack of all trades, master of none... and unemployed.\",\n    \"Keep your friends close and your enemies closer... but not too close, that's creepy.\",\n    \"Let sleeping dogs lie... they're probably having better dreams than your reality.\",\n    \"Look before you leap... but don't look too long or you'll miss your chance.\",\n    \"Make hay while the sun shines... or just buy hay from someone else.\",\n    \"Misery loves company... but company usually prefers happiness.\",\n    \"Nothing ventured, nothing gained... nothing lost either.\",\n    \"Once bitten, twice shy... three times is just poor judgment.\",\n    \"Out of sight, out of mind... until the credit card bill arrives.\",\n    \"People who live in glass houses shouldn't throw stones... or walk around naked.\",\n    \"The best defense is a good offense... unless you're really bad at offense.\",\n    \"The bigger they are, the harder they fall... and the more damage they cause.\",\n    \"The blind leading the blind... welcome to management.\",\n    \"The calm before the storm... is usually just boredom.\",\n    \"The early bird catches the worm... but the night owl catches the mouse.\",\n    \"Too many cooks spoil the broth... but not enough cooks means no broth.\",\n    \"When the going gets tough, the tough get going... somewhere else.\",\n    \"You can't win them all... or even most of them, apparently.\",\n    \"A watched pot never boils... but an unwatched pot always boils over.\",\n    \"Beauty is in the eye of the beholder... and the beholder needs glasses.\",\n    \"Clothes make the man... broke.\",\n    \"Don't judge a book by its cover... judge it by its Amazon reviews.\",\n    \"Every dog has its day... and then it's back to being a dog.\",\n    \"Half a loaf is better than none... but whole grain is better than half.\",\n    \"It's better to give than to receive... unless you're receiving money.\",\n    \"Money talks... but it usually says goodbye.\",\n    \"Never look back... unless you're backing up.\",\n    \"Practice what you preach... or at least Google it first.\",\n    \"The bigger the risk, the bigger the reward... or the bigger the failure.\",\n    \"The grass is always greener... but the water bill is always higher.\",\n    \"The squeaky wheel gets the grease... and then gets blamed for everything.\",\n    \"You can't please everyone... and you probably can't please anyone.\",\n    \"A good plan today is better than a perfect plan tomorrow... but both will fail anyway.\",\n    \"All good things must come to an end... usually sooner than expected.\",\n    \"Better safe than sorry... but sorry is more interesting.\",\n    \"Don't bite off more than you can chew... unless you like choking.\",\n    \"Every rose has its thorn... and every thorn has its lawsuit.\",\n    \"First impressions are everything... so you're probably screwed.\",\n    \"If you can't stand the heat, get out of the kitchen... and order takeout.\",\n    \"It's not over until the fat lady sings... and she's been warming up for hours.\",\n    \"Life is what happens when you're making other plans... and those plans were terrible anyway.\",\n    \"Nothing is certain except death and taxes... and software updates.\",\n    \"The show must go on... even if nobody's watching.\",\n    \"Time is money... and you're broke.\",\n    \"What goes around comes around... usually with interest.\",\n    \"You win some, you lose some... mostly lose.\",\n    \"A leopard can't change its spots... but it can get therapy.\",\n    \"Don't burn your bridges... you might need them to jump off later.\",\n    \"Every little bit helps... except when it doesn't.\",\n    \"If you snooze, you lose... but if you don't snooze, you're tired.\",\n    \"It takes two to tango... but only one to trip.\",\n    \"Keep your chin up... so people can see you crying.\",\n    \"Live and let live... but mostly just live with disappointment.\",\n    \"Make the best of a bad situation... like reading this list.\",\n    \"No good deed goes unpunished... so why bother?\",\n    \"One man's trash is another man's treasure... but it's still trash.\",\n    \"Rome wasn't built in a day... but it was destroyed in one.\",\n    \"The best things in life are free... everything else requires a subscription.\",\n    \"The devil you know is better than the devil you don't... but they're both devils.\",\n    \"There's more than one way to skin a cat... but none of them are legal.\",\n    \"What's done is done... and it was probably done wrong.\",\n    \"You can't turn back time... thankfully.\",\n    \"A chain is only as strong as its weakest link... and you're the weakest link.\",\n    \"Don't count your blessings... you'll run out of fingers.\",\n    \"Every man for himself... because teamwork is overrated.\",\n    \"If wishes were horses, beggars would ride... and horses would be extinct.\",\n    \"It's always something... usually something expensive.\",\n    \"Life's too short... to finish this sentence.\",\n    \"No news is good news... unless you're in the news business.\",\n    \"The pen is mightier than the sword... until someone brings a gun.\",\n    \"There's safety in numbers... unless it's your PIN number.\",\n    \"What goes up must come down... usually on your head.\",\n    \"You can't have it both ways... pick your disappointment.\",\n    \"A house divided against itself cannot stand... so rent instead.\",\n    \"Don't put off until tomorrow what you can do today... unless today is already ruined.\",\n    \"Every journey begins with a single step... into a pile of problems.\",\n    \"If life hands you lemons, make lemonade... then realize you hate lemonade.\",\n    \"It's not the size of the dog in the fight... it's whether the dog shows up.\",\n    \"Keep your eye on the prize... while everything else falls apart.\",\n    \"Lightning in a bottle... is probably just a fire hazard.\",\n    \"Make a mountain out of a molehill... at least you'll have a mountain.\",\n    \"No man is an island... some are more like swamps.\",\n    \"Out of the frying pan and into the fire... welcome to adult life.\",\n    \"The grass isn't always greener... sometimes it's just artificial turf.\",\n    \"There's no 'I' in team... but there's 'me' if you rearrange the letters.\",\n    \"What doesn't bend, breaks... what does bend gets stepped on.\",\n    \"You can lead a horse to water... but you can't make it pay rent.\",\n    \"A bird in the hand... probably wants to be let go.\",\n    \"Don't rock the boat... unless you can swim.\",\n    \"Every dog has its day... and then it gets neutered.\",\n    \"If the mountain won't come to Mohammed... Mohammed probably gave bad directions.\",\n    \"It's six of one, half dozen of another... and both options suck.\",\n    \"Kill two birds with one stone... and face animal cruelty charges.\",\n    \"Let bygones be bygones... because you can't afford a lawyer.\",\n    \"Make like a tree and leave... your problems will follow you.\",\n    \"Nothing succeeds like success... too bad success is so rare.\",\n    \"Once in a blue moon... things go according to plan.\",\n    \"Put your money where your mouth is... and choke on it.\",\n    \"The buck stops here... and takes all your other money with it.\",\n    \"There's no accounting for taste... especially yours.\",\n    \"What's good for the goose is good for the gander... but geese are jerks.\",\n    \"You can't get blood from a stone... but you can get a headache trying.\",\n    \"A fool's paradise... is still paradise for a fool.\",\n    \"Don't look back in anger... look back in disappointment instead.\",\n    \"Every silver lining has a cloud... and that cloud is raining.\",\n    \"If you can't beat 'em, join 'em... then realize why you couldn't beat them.\",\n    \"It's not rocket science... but even rocket scientists make mistakes.\",\n    \"Life is like a box of chocolates... somebody already ate all the good ones.\",\n    \"No rest for the wicked... or the good, apparently.\",\n    \"The road less traveled... is less traveled for a reason.\",\n    \"There's method to my madness... but the method is flawed.\",\n    \"What comes around goes around... like a boomerang to the face.\",\n    \"You scratch my back, I'll scratch yours... and we'll both get infections.\",\n    \"A penny for your thoughts... is probably overpricing them.\",\n    \"Don't throw good money after bad... throw it at something else instead.\",\n    \"Every man has his price... and it's usually disappointingly low.\",\n    \"If you play with fire, you get burned... if you don't play with fire, you freeze.\",\n    \"It's not over until it's over... and then it's really over.\",\n    \"Keep your powder dry... even though nobody uses powder anymore.\",\n    \"Love me, love my dog... even though my dog has behavioral issues.\",\n    \"Make love, not war... unless you're bad at both.\",\n    \"No pain, no gain... but sometimes just pain and medical bills.\",\n    \"Only time will tell... and time is a terrible storyteller.\",\n    \"Put up or shut up... preferably shut up.\",\n    \"The die is cast... and it rolled under the couch.\",\n    \"There's no place like home... especially when you can't afford to move.\",\n    \"What's sauce for the goose is sauce for the gander... but sauce is extra.\",\n    \"You can't make an omelet... without disappointing someone who wanted pancakes.\",\n    \"A picture paints a thousand words... most of them complaints.\",\n    \"Don't bite the hand that feeds you... it might stop feeding you.\",\n    \"Every rose has its thorn... and every thorn has its infection.\",\n    \"If the shoe fits, wear it... even if it goes out of style.\",\n    \"It's not what you know, it's who you know... and you don't know anyone important.\",\n    \"Life is what you make it... so you're to blame for this mess.\",\n    \"No good turn goes unpunished... so consider being selfish.\",\n    \"The exception proves the rule... except when it doesn't.\",\n    \"There's more than one way to skin a cat... but why would you want to?\",\n    \"What's done cannot be undone... especially your student loans.\",\n    \"You pays your money and you takes your chances... and lose both.\",\n    \"A rolling stone gathers no moss... but it does gather restraining orders.\",\n    \"Don't count your chickens before they hatch... count your debts instead.\",\n    \"Every little helps... when you're desperate enough.\",\n    \"If you can't say something nice... you're probably being honest.\",\n    \"It takes all sorts... unfortunately.\",\n    \"Keep your friends close... and your antacids closer.\",\n    \"Life begins at forty... when you finally give up on your dreams.\",\n    \"Make hay while the sun shines... because it's going to rain forever after this.\",\n    \"No man can serve two masters... without disappointing both.\",\n    \"One good turn deserves another... but you'll probably only get one.\",\n    \"Put your best foot forward... and immediately step in something unpleasant.\",\n    \"The best laid schemes of mice and men... are usually about equally effective.\",\n    \"There's many a slip 'twixt cup and lip... especially if you have shaky hands.\",\n    \"What's bred in the bone... will probably cause arthritis later.\",\n    \"You can't judge a man until you've walked in his shoes... and his shoes probably don't fit.\",\n    \"A stitch in time saves nine... but you'll need at least twelve.\",\n    \"Don't wash your dirty linen in public... wash it at home where it belongs.\",\n    \"Every stick has two ends... and both will poke you in the eye.\",\n    \"If you lie down with dogs, you get up with fleas... and possibly worse.\",\n    \"It's no use crying over spilt milk... unless it was oat milk, that stuff is expensive.\",\n    \"Life is just a bowl of cherries... and most of them have pits.\",\n    \"No smoke without fire... but sometimes there's fire without smoke, which is worse.\",\n    \"The proof of the pudding is in the eating... and this pudding tastes terrible.\",\n    \"There's nowt so queer as folk... except maybe you.\",\n    \"What's lost is lost... especially your dignity.\",\n    \"You can't get a quart into a pint pot... basic physics, people.\",\n    \"A bad workman blames his tools... a good workman blames his coworkers.\",\n    \"Don't teach your grandmother to suck eggs... she already knows things you don't want to think about.\",\n    \"Every man to his trade... even if his trade is complaining.\",\n    \"If you want a thing done well, do it yourself... and then do it again because you messed up.\",\n    \"It's an ill wind that blows nobody any good... and today the wind is very ill indeed.\",\n    \"Life is but a walking shadow... and shadows don't pay taxes.\",\n    \"No one can make you feel inferior without your consent... but they can try really, really hard.\",\n    \"The longest journey starts with a single step... in the wrong direction.\",\n    \"There's no fool like an old fool... except maybe a young fool with student loans.\",\n    \"What's sauce for the goose... is probably too spicy for the gander.\",\n    \"You can take a horse to water... but you can't make it use proper grammar.\",\n    \"Ambition is the last refuge of the failure... and the first refuge of the delusional.\",\n    \"Don't let the perfect be the enemy of the good... let reality be the enemy of both.\",\n    \"Every man is his own worst enemy... which explains a lot about the world.\",\n    \"If you want something done right... lower your standards.\",\n    \"It never rains but it pours... and you forgot your umbrella again.\",\n    \"Life imitates art... and both are pretty disappointing lately.\",\n    \"No battle plan survives contact with the enemy... or with reality.\",\n    \"The best things come in small packages... so do the worst things.\",\n    \"There's a light at the end of every tunnel... it's usually an oncoming train.\"\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/data/unmotivationalQuotes.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_QuoteCard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/QuoteCard */ \"(app-pages-browser)/./app/components/QuoteCard.tsx\");\n/* harmony import */ var _utils_quoteGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/quoteGenerator */ \"(app-pages-browser)/./app/utils/quoteGenerator.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction Home() {\n    _s();\n    const [name, setName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [quote, setQuote] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isUnmotivational, setIsUnmotivational] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentDate, setCurrentDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [hasGenerated, setHasGenerated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isGenerating, setIsGenerating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Set the current date on component mount\n        const today = new Date();\n        setCurrentDate((0,_utils_quoteGenerator__WEBPACK_IMPORTED_MODULE_3__.formatDate)(today));\n    }, []);\n    const handleGenerateQuote = ()=>{\n        if (name.trim() === \"\") return;\n        setIsGenerating(true);\n        // Simulate loading for better UX\n        setTimeout(()=>{\n            const result = (0,_utils_quoteGenerator__WEBPACK_IMPORTED_MODULE_3__.generateQuote)(name, currentDate);\n            setQuote(result.text);\n            setIsUnmotivational(result.isUnmotivational);\n            setHasGenerated(true);\n            setIsGenerating(false);\n        }, 600);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-800 text-white relative overflow-hidden\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-0 left-0 w-full h-full overflow-hidden z-0\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute top-20 left-10 w-64 h-64 bg-purple-600/20 rounded-full filter blur-3xl\"\n                    }, void 0, false, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                        lineNumber: 40,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute bottom-20 right-10 w-80 h-80 bg-pink-600/20 rounded-full filter blur-3xl\"\n                    }, void 0, false, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                        lineNumber: 41,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute top-1/3 right-1/4 w-40 h-40 bg-indigo-600/20 rounded-full filter blur-3xl\"\n                    }, void 0, false, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                        lineNumber: 42,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                lineNumber: 39,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"container mx-auto px-4 py-12 flex flex-col items-center justify-center min-h-screen relative z-10\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                        className: \"mb-12 text-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-4xl md:text-5xl font-bold mb-4 bg-clip-text text-transparent bg-gradient-to-r from-pink-500 to-violet-500\",\n                                children: \"Daily Motivation\"\n                            }, void 0, false, {\n                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                lineNumber: 47,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-lg text-white/80\",\n                                children: \"Get your personalized motivational quote for the day\"\n                            }, void 0, false, {\n                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                lineNumber: 50,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                        className: \"w-full max-w-md mx-auto flex flex-col items-center space-y-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full space-y-4 bg-white/5 p-6 rounded-xl backdrop-blur-sm border border-white/10 shadow-xl\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"space-y-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                htmlFor: \"name\",\n                                                className: \"block text-sm font-medium\",\n                                                children: \"Your Name\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                                lineNumber: 56,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"text\",\n                                                id: \"name\",\n                                                value: name,\n                                                onChange: (e)=>setName(e.target.value),\n                                                placeholder: \"Enter your name\",\n                                                className: \"w-full px-4 py-3 rounded-lg bg-white/10 border border-white/20 focus:outline-none focus:ring-2 focus:ring-purple-500 backdrop-blur-sm transition\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                                lineNumber: 59,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                        lineNumber: 55,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"space-y-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                htmlFor: \"date\",\n                                                className: \"block text-sm font-medium\",\n                                                children: \"Date\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                                lineNumber: 70,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"date\",\n                                                id: \"date\",\n                                                value: currentDate,\n                                                onChange: (e)=>setCurrentDate(e.target.value),\n                                                className: \"w-full px-4 py-3 rounded-lg bg-white/10 border border-white/20 focus:outline-none focus:ring-2 focus:ring-purple-500 backdrop-blur-sm transition\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                                lineNumber: 73,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                        lineNumber: 69,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: handleGenerateQuote,\n                                        disabled: !name.trim() || isGenerating,\n                                        className: \"w-full py-3 px-4 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg text-white font-medium shadow-lg hover:from-purple-700 hover:to-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all\",\n                                        children: isGenerating ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"flex items-center justify-center\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    className: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n                                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                                    fill: \"none\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                            className: \"opacity-25\",\n                                                            cx: \"12\",\n                                                            cy: \"12\",\n                                                            r: \"10\",\n                                                            stroke: \"currentColor\",\n                                                            strokeWidth: \"4\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                                            lineNumber: 90,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                            className: \"opacity-75\",\n                                                            fill: \"currentColor\",\n                                                            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                                            lineNumber: 91,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                                    lineNumber: 89,\n                                                    columnNumber: 19\n                                                }, this),\n                                                \"Generating...\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                            lineNumber: 88,\n                                            columnNumber: 17\n                                        }, this) : \"Generate Your Quote\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                        lineNumber: 82,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                lineNumber: 54,\n                                columnNumber: 11\n                            }, this),\n                            hasGenerated && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-12 w-full animate-fade-in relative\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_QuoteCard__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    name: name,\n                                    date: currentDate,\n                                    quote: quote,\n                                    isUnmotivational: isUnmotivational\n                                }, void 0, false, {\n                                    fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                    lineNumber: 103,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                lineNumber: 102,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                        lineNumber: 53,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                        className: \"mt-16 text-center text-white/60 text-sm\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    \"\\xa9 \",\n                                    new Date().getFullYear(),\n                                    \" Daily Motivation Generator\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                lineNumber: 114,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"mt-2 text-xs opacity-60\",\n                                children: \"Every name and date produces a unique quote\"\n                            }, void 0, false, {\n                                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                                lineNumber: 115,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                        lineNumber: 113,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n                lineNumber: 45,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/tonegabes/Projetos/Codes/emotevation/app/page.tsx\",\n        lineNumber: 37,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"xPmTtx/0Eocj9StnPrJvy2F07OY=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/quoteGenerator.ts":
/*!*************************************!*\
  !*** ./app/utils/quoteGenerator.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; },\n/* harmony export */   generateQuote: function() { return /* binding */ generateQuote; }\n/* harmony export */ });\n/* harmony import */ var _data_quotes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/quotes */ \"(app-pages-browser)/./app/data/quotes.ts\");\n/* harmony import */ var _data_unmotivationalQuotes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/unmotivationalQuotes */ \"(app-pages-browser)/./app/data/unmotivationalQuotes.ts\");\n\n\n/**\n * Generates a seeded random number based on a string input\n * @param seed String to use as seed\n * @returns A number between 0 and 1\n */ function seededRandom(seed) {\n    let hash = 0;\n    for(let i = 0; i < seed.length; i++){\n        hash = (hash << 5) - hash + seed.charCodeAt(i);\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    // Create a decimal between 0 and 1\n    const random = Math.abs(Math.sin(hash) * 10000) % 1;\n    return random;\n}\n/**\n * Formats a date into a string (YYYY-MM-DD)\n * @param date Date to format\n * @returns Formatted date string\n */ function formatDate(date) {\n    return date.toISOString().split(\"T\")[0];\n}\n/**\n * Generates a quote based on name and date\n * @param name User's name\n * @param date Current date\n * @returns An object containing the quote and whether it's unmotivational\n */ function generateQuote(name, date) {\n    // Create a seed from the name and date\n    const seed = \"\".concat(name.toLowerCase(), \"-\").concat(date);\n    // Determine whether to use motivational or unmotivational quotes\n    // Using a separate seed for this decision to ensure it's random but consistent for the same name/date\n    const quoteTypeSeed = \"\".concat(seed, \"-type\");\n    const isUnmotivational = seededRandom(quoteTypeSeed) > 0.7; // 30% chance for unmotivational quotes\n    // Select the appropriate quote collection\n    const quoteCollection = isUnmotivational ? _data_unmotivationalQuotes__WEBPACK_IMPORTED_MODULE_1__.unmotivationalQuotes : _data_quotes__WEBPACK_IMPORTED_MODULE_0__.quotes;\n    // Get a random index based on the seed\n    const randomIndex = Math.floor(seededRandom(seed) * quoteCollection.length);\n    // Return the quote at that index along with its type\n    return {\n        text: quoteCollection[randomIndex],\n        isUnmotivational\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9xdW90ZUdlbmVyYXRvci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdDO0FBQzRCO0FBRXBFOzs7O0NBSUMsR0FDRCxTQUFTRSxhQUFhQyxJQUFZO0lBQ2hDLElBQUlDLE9BQU87SUFDWCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUYsS0FBS0csTUFBTSxFQUFFRCxJQUFLO1FBQ3BDRCxPQUFPLENBQUVBLFFBQVEsS0FBS0EsT0FBUUQsS0FBS0ksVUFBVSxDQUFDRjtRQUM5Q0QsT0FBT0EsT0FBT0EsTUFBTSwyQkFBMkI7SUFDakQ7SUFFQSxtQ0FBbUM7SUFDbkMsTUFBTUksU0FBU0MsS0FBS0MsR0FBRyxDQUFDRCxLQUFLRSxHQUFHLENBQUNQLFFBQVEsU0FBUztJQUNsRCxPQUFPSTtBQUNUO0FBRUE7Ozs7Q0FJQyxHQUNNLFNBQVNJLFdBQVdDLElBQVU7SUFDbkMsT0FBT0EsS0FBS0MsV0FBVyxHQUFHQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7QUFDekM7QUFFQTs7Ozs7Q0FLQyxHQUNNLFNBQVNDLGNBQWNDLElBQVksRUFBRUosSUFBWTtJQUN0RCx1Q0FBdUM7SUFDdkMsTUFBTVYsT0FBTyxHQUF5QlUsT0FBdEJJLEtBQUtDLFdBQVcsSUFBRyxLQUFRLE9BQUxMO0lBRXRDLGlFQUFpRTtJQUNqRSxzR0FBc0c7SUFDdEcsTUFBTU0sZ0JBQWdCLEdBQVEsT0FBTGhCLE1BQUs7SUFDOUIsTUFBTWlCLG1CQUFtQmxCLGFBQWFpQixpQkFBaUIsS0FBSyx1Q0FBdUM7SUFFbkcsMENBQTBDO0lBQzFDLE1BQU1FLGtCQUFrQkQsbUJBQW1CbkIsNEVBQW9CQSxHQUFHRCxnREFBTUE7SUFFeEUsdUNBQXVDO0lBQ3ZDLE1BQU1zQixjQUFjYixLQUFLYyxLQUFLLENBQUNyQixhQUFhQyxRQUFRa0IsZ0JBQWdCZixNQUFNO0lBRTFFLHFEQUFxRDtJQUNyRCxPQUFPO1FBQ0xrQixNQUFNSCxlQUFlLENBQUNDLFlBQVk7UUFDbENGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvdXRpbHMvcXVvdGVHZW5lcmF0b3IudHM/MjM5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBxdW90ZXMgfSBmcm9tICcuLi9kYXRhL3F1b3Rlcyc7XG5pbXBvcnQgeyB1bm1vdGl2YXRpb25hbFF1b3RlcyB9IGZyb20gJy4uL2RhdGEvdW5tb3RpdmF0aW9uYWxRdW90ZXMnO1xuXG4vKipcbiAqIEdlbmVyYXRlcyBhIHNlZWRlZCByYW5kb20gbnVtYmVyIGJhc2VkIG9uIGEgc3RyaW5nIGlucHV0XG4gKiBAcGFyYW0gc2VlZCBTdHJpbmcgdG8gdXNlIGFzIHNlZWRcbiAqIEByZXR1cm5zIEEgbnVtYmVyIGJldHdlZW4gMCBhbmQgMVxuICovXG5mdW5jdGlvbiBzZWVkZWRSYW5kb20oc2VlZDogc3RyaW5nKTogbnVtYmVyIHtcbiAgbGV0IGhhc2ggPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZWQubGVuZ3RoOyBpKyspIHtcbiAgICBoYXNoID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBzZWVkLmNoYXJDb2RlQXQoaSk7XG4gICAgaGFzaCA9IGhhc2ggJiBoYXNoOyAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcbiAgfVxuICBcbiAgLy8gQ3JlYXRlIGEgZGVjaW1hbCBiZXR3ZWVuIDAgYW5kIDFcbiAgY29uc3QgcmFuZG9tID0gTWF0aC5hYnMoTWF0aC5zaW4oaGFzaCkgKiAxMDAwMCkgJSAxO1xuICByZXR1cm4gcmFuZG9tO1xufVxuXG4vKipcbiAqIEZvcm1hdHMgYSBkYXRlIGludG8gYSBzdHJpbmcgKFlZWVktTU0tREQpXG4gKiBAcGFyYW0gZGF0ZSBEYXRlIHRvIGZvcm1hdFxuICogQHJldHVybnMgRm9ybWF0dGVkIGRhdGUgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlKGRhdGU6IERhdGUpOiBzdHJpbmcge1xuICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF07XG59XG5cbi8qKlxuICogR2VuZXJhdGVzIGEgcXVvdGUgYmFzZWQgb24gbmFtZSBhbmQgZGF0ZVxuICogQHBhcmFtIG5hbWUgVXNlcidzIG5hbWVcbiAqIEBwYXJhbSBkYXRlIEN1cnJlbnQgZGF0ZVxuICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIHF1b3RlIGFuZCB3aGV0aGVyIGl0J3MgdW5tb3RpdmF0aW9uYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlUXVvdGUobmFtZTogc3RyaW5nLCBkYXRlOiBzdHJpbmcpOiB7IHRleHQ6IHN0cmluZzsgaXNVbm1vdGl2YXRpb25hbDogYm9vbGVhbiB9IHtcbiAgLy8gQ3JlYXRlIGEgc2VlZCBmcm9tIHRoZSBuYW1lIGFuZCBkYXRlXG4gIGNvbnN0IHNlZWQgPSBgJHtuYW1lLnRvTG93ZXJDYXNlKCl9LSR7ZGF0ZX1gO1xuICBcbiAgLy8gRGV0ZXJtaW5lIHdoZXRoZXIgdG8gdXNlIG1vdGl2YXRpb25hbCBvciB1bm1vdGl2YXRpb25hbCBxdW90ZXNcbiAgLy8gVXNpbmcgYSBzZXBhcmF0ZSBzZWVkIGZvciB0aGlzIGRlY2lzaW9uIHRvIGVuc3VyZSBpdCdzIHJhbmRvbSBidXQgY29uc2lzdGVudCBmb3IgdGhlIHNhbWUgbmFtZS9kYXRlXG4gIGNvbnN0IHF1b3RlVHlwZVNlZWQgPSBgJHtzZWVkfS10eXBlYDtcbiAgY29uc3QgaXNVbm1vdGl2YXRpb25hbCA9IHNlZWRlZFJhbmRvbShxdW90ZVR5cGVTZWVkKSA+IDAuNzsgLy8gMzAlIGNoYW5jZSBmb3IgdW5tb3RpdmF0aW9uYWwgcXVvdGVzXG4gIFxuICAvLyBTZWxlY3QgdGhlIGFwcHJvcHJpYXRlIHF1b3RlIGNvbGxlY3Rpb25cbiAgY29uc3QgcXVvdGVDb2xsZWN0aW9uID0gaXNVbm1vdGl2YXRpb25hbCA/IHVubW90aXZhdGlvbmFsUXVvdGVzIDogcXVvdGVzO1xuICBcbiAgLy8gR2V0IGEgcmFuZG9tIGluZGV4IGJhc2VkIG9uIHRoZSBzZWVkXG4gIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihzZWVkZWRSYW5kb20oc2VlZCkgKiBxdW90ZUNvbGxlY3Rpb24ubGVuZ3RoKTtcbiAgXG4gIC8vIFJldHVybiB0aGUgcXVvdGUgYXQgdGhhdCBpbmRleCBhbG9uZyB3aXRoIGl0cyB0eXBlXG4gIHJldHVybiB7XG4gICAgdGV4dDogcXVvdGVDb2xsZWN0aW9uW3JhbmRvbUluZGV4XSxcbiAgICBpc1VubW90aXZhdGlvbmFsXG4gIH07XG59XG4iXSwibmFtZXMiOlsicXVvdGVzIiwidW5tb3RpdmF0aW9uYWxRdW90ZXMiLCJzZWVkZWRSYW5kb20iLCJzZWVkIiwiaGFzaCIsImkiLCJsZW5ndGgiLCJjaGFyQ29kZUF0IiwicmFuZG9tIiwiTWF0aCIsImFicyIsInNpbiIsImZvcm1hdERhdGUiLCJkYXRlIiwidG9JU09TdHJpbmciLCJzcGxpdCIsImdlbmVyYXRlUXVvdGUiLCJuYW1lIiwidG9Mb3dlckNhc2UiLCJxdW90ZVR5cGVTZWVkIiwiaXNVbm1vdGl2YXRpb25hbCIsInF1b3RlQ29sbGVjdGlvbiIsInJhbmRvbUluZGV4IiwiZmxvb3IiLCJ0ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/quoteGenerator.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/Njc0NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Ftonegabes%2FProjetos%2FCodes%2Femotevation%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);